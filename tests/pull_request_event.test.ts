import * as core from '@actions/core'
import * as git from '../src/git'
import { handlePullRequestEvent } from '../src/pull_request_event'

jest.mock('@actions/core')
jest.mocked(core.info).mockImplementation()
jest.mock('../src/git')

describe('pull request event', () => {
  const inputs = {
    commitMessage: 'Generated by GitHub Actions (workflow / job)',
    commitMessageFooter: 'https://github.com/int128/update-generated-files-action/actions/runs/4309709120',
    title: 'Follow up the generated files',
    body: 'Body',
    token: 'GITHUB_TOKEN',
  }
  const context = {
    sha: '0123456789abcdef-merge',
    payload: {
      action: 'dummy',
      pull_request: {
        base: {
          ref: 'main',
        },
        head: {
          ref: 'topic',
          sha: '0123456789abcdef-head',
        },
      },
    },
  }

  test('checkout with merge commit', async () => {
    jest.mocked(git.getAuthorNameOfCommits).mockResolvedValue(['renovate[bot]'])
    jest.mocked(git.getCurrentSHA).mockResolvedValue('0123456789abcdef-merge')
    jest.mocked(git.canMerge).mockResolvedValueOnce(false)
    jest.mocked(git.canMerge).mockResolvedValueOnce(true)
    jest.mocked(git.getParentSHAs).mockResolvedValueOnce(['0123456789abcdef-latest-base', '0123456789abcdef-head'])

    await handlePullRequestEvent(inputs, context)

    expect(git.stash).toHaveBeenCalledTimes(1)
    expect(git.checkout).toHaveBeenCalledWith('0123456789abcdef-head')
    expect(git.merge).toHaveBeenCalledWith(
      '0123456789abcdef-latest-base',
      `Merge branch main 0123456789abcdef-latest-base into topic 0123456789abcdef-head

Recreated a merge commit from 0123456789abcdef-merge by GitHub Actions
https://github.com/int128/update-generated-files-action/actions/runs/4309709120`
    )
    expect(git.stashPop).toHaveBeenCalledTimes(1)
    expect(git.commit).toHaveBeenCalledWith(`Generated by GitHub Actions (workflow / job)

https://github.com/int128/update-generated-files-action/actions/runs/4309709120`)
    expect(git.push).toHaveBeenCalledTimes(1)
  })

  test('checkout with head commit', async () => {
    jest.mocked(git.getAuthorNameOfCommits).mockResolvedValue(['renovate[bot]'])
    jest.mocked(git.getCurrentSHA).mockResolvedValue('0123456789abcdef-head')
    await handlePullRequestEvent(inputs, context)

    expect(git.checkout).not.toHaveBeenCalled()
    expect(git.merge).not.toHaveBeenCalled()
    expect(git.commit).toHaveBeenCalledWith(`Generated by GitHub Actions (workflow / job)

https://github.com/int128/update-generated-files-action/actions/runs/4309709120`)
    expect(git.push).toHaveBeenCalledTimes(1)
  })

  test('last authors are this action', async () => {
    jest
      .mocked(git.getAuthorNameOfCommits)
      .mockResolvedValue([git.AUTHOR_NAME, git.AUTHOR_NAME, git.AUTHOR_NAME, git.AUTHOR_NAME, git.AUTHOR_NAME])
    await expect(handlePullRequestEvent(inputs, context)).rejects.toThrow(/infinite loop/)
  })
})
